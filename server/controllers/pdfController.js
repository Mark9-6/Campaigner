import { PDFDocument, rgb, StandardFonts } from 'pdf-lib';
import path from 'path';
import fs from 'fs';

const invoiceDir = path.join(process.cwd(), 'invoices'); // Directory to store PDFs

if (!fs.existsSync(invoiceDir)) {
  fs.mkdirSync(invoiceDir); // Create the directory if it doesn't exist
}

const generatePdfByPAN = async (req, res) => {
  try {
    const { panCardNumber ,name } = req.body;          ///////////////// from frontend

    if (!panCardNumber) {
      return res.status(400).json({ success: false, message: 'PAN card number is required' });
    }

    const panCardRegex = /^[A-Z]{5}[0-9]{4}[A-Z]{1}$/;
    if (!panCardRegex.test(panCardNumber)) {
      return res.status(400).json({ success: false, message: 'Invalid PAN card number' });
    }

    // Create a new PDF document
    const pdfDoc = await PDFDocument.create();
    const page = pdfDoc.addPage([600, 400]);
    const { width, height } = page.getSize();
    const font = await pdfDoc.embedFont(StandardFonts.Helvetica);

    let y = height - 50;
    page.drawText('Invoice', { x: 50, y, size: 24, font, color: rgb(0, 0, 0) });
    y -= 40;

    page.drawText(`PAN Card Number: ${panCardNumber}`, { x: 50, y, size: 12, font, color: rgb(0, 0, 0) });
    y -= 20;
    page.drawText(`Generated by user:${name} `, { x: 50, y, size: 12, font, color: rgb(0, 0, 0) });
    y -= 20;

    // Add more details to the PDF as needed
    page.drawText('This is a sample invoice generated for the provided PAN card number.', {
      x: 50,
      y,
      size: 12,
      font,
      color: rgb(0, 0, 0),
    });

    // Save the PDF
    const pdfBytes = await pdfDoc.save();
    const fileName = `PAN_Invoice_${Date.now()}.pdf`;
    const filePath = path.join(invoiceDir, fileName);
    fs.writeFileSync(filePath, pdfBytes);

    // Return the PDF URL or download it
    const pdfUrl = `${req.protocol}://${req.get('host')}/invoices/${fileName}`;
    res.status(200).json({ success: true, message: 'PDF generated successfully', pdfUrl });
  } catch (error) {
    console.error('Error generating PDF:', error);
    res.status(500).json({ success: false, message: 'Error generating PDF', error });
  }
};

export {generatePdfByPAN}